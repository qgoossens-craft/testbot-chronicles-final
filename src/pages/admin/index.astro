---
export const prerender = false;

import { getCollection } from 'astro:content';
import AdminLayout from '../../layouts/AdminLayout.astro';

// Authentication check is handled by AdminLayout

// Get all blog posts including drafts
const allPosts = await getCollection('blog');
const publishedPosts = allPosts.filter(post => !post.data.draft);
const draftPosts = allPosts.filter(post => post.data.draft);

function formatDate(date: Date) {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'short',
    day: 'numeric'
  });
}

// Get all unique tags
const allTags = [...new Set(allPosts.flatMap(post => post.data.tags || []))];
---

<AdminLayout title="Dashboard">
  <!-- Dashboard Header -->
  <div class="mb-8">
    <h1 class="text-3xl font-bold text-gray-900 mb-4">Blog Dashboard</h1>
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
      <div class="admin-card">
        <div class="text-2xl font-bold text-blue-600">{publishedPosts.length}</div>
        <div class="text-sm text-gray-600">Published Posts</div>
      </div>
      <div class="admin-card">
        <div class="text-2xl font-bold text-yellow-600">{draftPosts.length}</div>
        <div class="text-sm text-gray-600">Draft Posts</div>
      </div>
      <div class="admin-card">
        <div class="text-2xl font-bold text-green-600">{allTags.length}</div>
        <div class="text-sm text-gray-600">Total Tags</div>
      </div>
      <div class="admin-card">
        <div class="text-2xl font-bold text-purple-600">{allPosts.length}</div>
        <div class="text-sm text-gray-600">Total Posts</div>
      </div>
    </div>
  </div>

  <!-- Quick Actions -->
  <div class="mb-8">
    <div class="flex flex-wrap gap-4">
      <a href="/admin/new-post" class="admin-button admin-button-primary">
        <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
        </svg>
        New Post
      </a>
      <button onclick="toggleSection('drafts')" class="admin-button admin-button-secondary">
        <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
        </svg>
        View Drafts
      </button>
      <a href="/admin/tags" class="admin-button admin-button-secondary">
        <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
        </svg>
        Manage Tags
      </a>
    </div>
  </div>

  <!-- Published Posts -->
  <div class="mb-8">
    <h2 class="text-2xl font-bold text-gray-900 mb-4">Published Posts</h2>
    <div class="admin-card">
      {publishedPosts.length === 0 ? (
        <div class="text-center py-8 text-gray-500">
          <p>No published posts yet.</p>
          <a href="/admin/new-post" class="text-blue-600 hover:text-blue-700 font-medium">Create your first post</a>
        </div>
      ) : (
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Title</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tags</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Published</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              {publishedPosts.map((post) => (
                <tr class="hover:bg-gray-50">
                  <td class="px-6 py-4">
                    <div class="text-sm font-medium text-gray-900">{post.data.title}</div>
                    <div class="text-sm text-gray-500 truncate max-w-xs">{post.data.description}</div>
                  </td>
                  <td class="px-6 py-4">
                    <div class="flex flex-wrap gap-1">
                      {post.data.tags?.slice(0, 3).map((tag) => (
                        <span class="inline-block bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded">
                          {tag}
                        </span>
                      ))}
                      {post.data.tags && post.data.tags.length > 3 && (
                        <span class="text-xs text-gray-500">+{post.data.tags.length - 3}</span>
                      )}
                    </div>
                  </td>
                  <td class="px-6 py-4 text-sm text-gray-500">
                    {formatDate(post.data.pubDate)}
                  </td>
                  <td class="px-6 py-4 text-sm font-medium space-x-2">
                    <a href={`/blog/${post.slug}`} class="text-blue-600 hover:text-blue-900">View</a>
                    <a href={`/admin/edit/${post.slug}`} class="text-green-600 hover:text-green-900">Edit</a>
                    <button onclick={`deletePost('${post.slug}')`} class="text-red-600 hover:text-red-900">Delete</button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}
    </div>
  </div>

  <!-- Draft Posts (Initially Hidden) -->
  <div id="drafts-section" style="display: none;" class="mb-8">
    <h2 class="text-2xl font-bold text-gray-900 mb-4">Draft Posts</h2>
    <div class="admin-card">
      {draftPosts.length === 0 ? (
        <div class="text-center py-8 text-gray-500">
          <p>No draft posts.</p>
        </div>
      ) : (
        <div class="space-y-4">
          {draftPosts.map((post) => (
            <div class="border border-yellow-200 bg-yellow-50 rounded-lg p-4">
              <div class="flex justify-between items-start">
                <div>
                  <h3 class="font-medium text-gray-900">{post.data.title}</h3>
                  <p class="text-sm text-gray-600 mt-1">{post.data.description}</p>
                  <div class="flex items-center mt-2 space-x-4">
                    <span class="text-xs text-gray-500">Created: {formatDate(post.data.pubDate)}</span>
                    {post.data.tags && post.data.tags.length > 0 && (
                      <div class="flex gap-1">
                        {post.data.tags.slice(0, 3).map((tag) => (
                          <span class="text-xs bg-gray-200 text-gray-700 px-2 py-1 rounded">{tag}</span>
                        ))}
                      </div>
                    )}
                  </div>
                </div>
                <div class="flex space-x-2">
                  <a href={`/admin/edit/${post.slug}`} class="text-sm bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700">
                    Edit
                  </a>
                  <button onclick={`publishPost('${post.slug}')`} class="text-sm bg-green-600 text-white px-3 py-1 rounded hover:bg-green-700">
                    Publish
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  </div>

  <!-- Tags Overview -->
  <div class="mb-8">
    <h2 class="text-2xl font-bold text-gray-900 mb-4">Popular Tags</h2>
    <div class="admin-card">
      <div class="flex flex-wrap gap-2">
        {allTags.map((tag) => {
          const count = allPosts.filter(post => post.data.tags?.includes(tag)).length;
          return (
            <span class="inline-block bg-gray-100 text-gray-800 px-3 py-1 rounded-full text-sm">
              {tag} ({count})
            </span>
          );
        })}
      </div>
    </div>
  </div>
</AdminLayout>

<script>
  function toggleSection(sectionId) {
    const section = document.getElementById(`${sectionId}-section`);
    if (section) {
      section.style.display = section.style.display === 'none' ? 'block' : 'none';
    }
  }

  function deletePost(slug) {
    if (confirm('Are you sure you want to delete this post? This action cannot be undone.')) {
      // TODO: Implement delete functionality
      alert('Delete functionality will be implemented with API endpoints');
    }
  }

  function publishPost(slug) {
    if (confirm('Publish this post?')) {
      // TODO: Implement publish functionality
      alert('Publish functionality will be implemented with API endpoints');
    }
  }
</script>