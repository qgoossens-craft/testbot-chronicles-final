---
export const prerender = true;

import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import TableOfContents from '../../components/TableOfContents.astro';
import { calculateReadingTime, formatReadingTime } from '../../utils/readingTime';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content, headings } = await post.render();
const readingTime = calculateReadingTime(post.body);

function formatDate(date: Date) {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<BaseLayout 
  title={post.data.title}
  description={post.data.description}
  category={post.data.category}
  tags={post.data.tags}
  pubDate={post.data.pubDate}
  type="article"
  showRadioPlayer={true}
>
  <!-- Article Header -->
  <article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
    <!-- Navigation breadcrumb -->
    <nav class="mb-8">
      <div class="flex items-center space-x-2 text-sm text-gray-500">
        <a href="/" class="hover:text-blue-600 transition">Home</a>
        <span>/</span>
        <a href="/blog" class="hover:text-blue-600 transition">Blog</a>
        <span>/</span>
        <span class="text-gray-900">{post.data.title}</span>
      </div>
    </nav>

    <!-- Article Header -->
    <header class="mb-12">
      <div class="text-center">
        <div class="flex justify-center mb-6">
          <img src="/images/brand/titusLogo.png" alt="TestBot Chronicles" class="h-12 w-auto opacity-60" />
        </div>
        
        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6 leading-tight">
          {post.data.title}
        </h1>
        
        <p class="text-xl text-gray-600 mb-8 max-w-3xl mx-auto">
          {post.data.description}
        </p>
        
        <div class="flex flex-wrap items-center justify-center gap-4 text-sm text-gray-500 mb-8">
          <div class="flex items-center">
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            <time datetime={post.data.pubDate.toISOString()}>
              {formatDate(post.data.pubDate)}
            </time>
          </div>
          
          <div class="flex items-center">
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <span class="text-blue-600 font-medium">
              {formatReadingTime(readingTime)}
            </span>
          </div>
          
          {post.data.updatedDate && (
            <div class="flex items-center">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
              </svg>
              Updated: {formatDate(post.data.updatedDate)}
            </div>
          )}
        </div>
        
        {post.data.category && (
          <div class="flex justify-center mb-6">
            <span class="inline-block bg-blue-50 text-blue-700 text-sm font-semibold px-4 py-2 rounded-lg border border-blue-200">
              <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
              </svg>
              {post.data.category}
            </span>
          </div>
        )}
        
        {post.data.tags && post.data.tags.length > 0 && (
          <div class="flex flex-wrap justify-center gap-2">
            {post.data.tags.map((tag) => (
              <span class="inline-block bg-blue-100 text-blue-700 text-sm font-medium px-3 py-1 rounded-full">
                {tag}
              </span>
            ))}
          </div>
        )}
      </div>
    </header>

    <!-- Table of Contents - Desktop Fixed Left -->
    <div class="hidden lg:block">
      <TableOfContents headings={headings} />
    </div>
    
    <!-- Article Content -->
    <div class="max-w-4xl mx-auto relative">
      <!-- Table of Contents - Mobile (sticky at top of content) -->
      <div class="lg:hidden mb-8">
        <TableOfContents headings={headings} />
      </div>
      
      <!-- Article Content -->
      <div class="prose prose-lg prose-slate mx-auto relative z-10">
        <Content />
      </div>
    </div>
    
    <!-- Article Footer -->
    <footer class="mt-16 pt-8 border-t border-gray-200">
      <div class="text-center">
        <div class="bg-gray-50 rounded-xl p-8">
          <div class="flex justify-center mb-4">
            <img src="/images/brand/titusLogo.png" alt="Titus Consulting" class="h-12 w-auto opacity-80" />
          </div>
          <h3 class="text-xl font-bold text-gray-900 mb-2">About the Author</h3>
          <p class="text-gray-600 mb-4 max-w-2xl mx-auto">
            Titus is an Automated Test Engineer and Quality Assurance Specialist with years of experience in test automation, 
            CI/CD integration, and building robust testing frameworks. Through TestBot Chronicles, he shares practical insights 
            and real-world solutions for modern testing challenges.
          </p>
          <div class="flex justify-center space-x-4">
            <a 
              href="/#contact" 
              class="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition font-semibold"
            >
              Get In Touch
            </a>
            <a 
              href="/blog" 
              class="bg-gray-200 text-gray-700 px-6 py-2 rounded-lg hover:bg-gray-300 transition font-semibold"
            >
              More Articles
            </a>
          </div>
        </div>
      </div>
    </footer>
  </article>
</BaseLayout>

